name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RUSSH_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build-and-upload:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      run: rustup default stable
    - name: Build Release
      run: cargo build --release
    - name: Rename Binary for Windows
      if: matrix.os == 'windows-latest'
      run: |
        ls target/release
        mv target/release/russh target/release/russh.exe
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RUSSH_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/target/release/russh${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        asset_name: russh-${{ matrix.os }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        asset_content_type: application/octet-stream

